{"version":3,"sources":["list_choices.js","App.js","serviceWorker.js","index.js"],"names":["search","require","phrases","search_phrases","e","fuzzy_result_arr","target","value","Object","keys","document","getElementById","innerHTML","forEach","result","new_div_elem","createElement","style","width","height","padding","background","marginBottom","color","fontSize","cursor","addEventListener","console","log","audio","Audio","crossOrigin","load","play","play_chinese","append","App","Fragment","className","id","placeholder","onChange","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"gMAAOA,G,YAAUC,EAAQ,IAAlBD,QAEHE,EAAU,CACV,mBAAqB,oEACrB,kBAAoB,oEACpB,OAAW,2DACX,QAAY,4DACZ,UAAc,8DACd,SAAa,6DACb,OAAW,2DACX,SAAa,6DACb,OAAW,2DACX,8BAA2B,yEAC3B,+BAAiC,gFACjC,iCAA8B,GAC9B,eAAiB,GACjB,EAAM,GACN,EAAM,GACN,EAAM,GACN,EAAM,GACN,EAAM,GACN,EAAM,GACN,EAAM,GACN,EAAM,GACN,EAAM,GACN,GAAO,GACP,qBAAuB,GACvB,uCAAyC,GACzC,uBAAyB,GACzB,uBAAyB,GACzB,IAAQ,GACR,MAAU,GACV,IAAQ,GACR,KAAS,GACT,4BAA8B,GAC9B,gCAA6B,GAC7B,2CAAwC,GACxC,+CAAiD,GACjD,OAAW,GACX,QAAY,GACZ,MAAU,GACV,QAAY,GACZ,cAAgB,GAChB,OAAW,GACX,OAAW,GACX,eAAiB,GACjB,aAAe,IAGZ,SAASC,EAAeC,GAC3B,IAAIC,EAAmBL,EAAOI,EAAEE,OAAOC,MAAOC,OAAOC,KAAKP,IAC1DQ,SAASC,eAAe,gBAAgBC,UAAY,GACpDP,EAAiBQ,SAAQ,SAASC,GAC9B,IAAIC,EAAeL,SAASM,cAAc,OAC1CD,EAAaE,MAAMC,MAAQ,OAC3BH,EAAaE,MAAME,OAAS,OAC5BJ,EAAaE,MAAMG,QAAU,MAC7BL,EAAaE,MAAMI,WAAa,UAChCN,EAAaE,MAAMK,aAAe,OAClCP,EAAaE,MAAMM,MAAQ,aAC3BR,EAAaE,MAAMO,SAAW,OAC9BT,EAAaE,MAAMQ,OAAS,UAC5BV,EAAaH,UAAYE,EACzBC,EAAaW,iBAAiB,SAAS,SAAStB,IAKjD,SAAsBA,GACzBuB,QAAQC,IAAIxB,EAAEE,OAAOM,WACrB,IAAMiB,EAAQ,IAAIC,MAAM5B,EAAQE,EAAEE,OAAOM,YACzCiB,EAAME,YAAc,YACpBF,EAAMG,OACNH,EAAMI,OAVkDC,CAAa9B,MAAK,GACtEM,SAASC,eAAe,gBAAgBwB,OAAOpB,MC5CxCqB,MAdf,WACE,OACE,kBAAC,IAAMC,SAAP,KACA,yBAAKC,UAAU,OACf,yBAAKC,GAAG,UAAR,mBACA,wBAAIA,GAAG,YAAP,yBACA,wBAAIA,GAAG,cAAP,uCACA,2BAAOA,GAAG,gBAAgBC,YAAY,mBAAmBC,SAAUtC,IACnE,yBAAKoC,GAAG,oBCFQG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFvC,SAASC,eAAe,SDyHpB,kBAAmBuC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL9B,QAAQ8B,MAAMA,EAAMC,a","file":"static/js/main.76711410.chunk.js","sourcesContent":["const {search} = require(\"fast-fuzzy\");\n\nvar phrases = {\n    \"What time is it?\" : \"https://collaboratescience.com/chinese/sounds/what_time_is_it.mp3\",\n    \"Today is monday\" : \"https://collaboratescience.com/chinese/sounds/today_is_monday.mp3\",\n    \"Monday\" : \"https://collaboratescience.com/chinese/sounds/monday.mp3\",\n    \"Tuesday\" : \"https://collaboratescience.com/chinese/sounds/tuesday.mp3\",\n    \"Wednesday\" : \"https://collaboratescience.com/chinese/sounds/wednesday.mp3\",\n    \"Thursday\" : \"https://collaboratescience.com/chinese/sounds/thursday.mp3\",\n    \"Friday\" : \"https://collaboratescience.com/chinese/sounds/friday.mp3\",\n    \"Saturday\" : \"https://collaboratescience.com/chinese/sounds/saturday.mp3\",\n    \"Sunday\" : \"https://collaboratescience.com/chinese/sounds/sunday.mp3\",\n    \"What’s the date today?\" : \"https://collaboratescience.com/chinese/sounds/whats_the_date_today.mp3\",\n    \"It is Tuesday, September 1st\" : \"https://collaboratescience.com/chinese/sounds/it_is_tuesday_september_1st.mp3\",\n    \"What’s the weather today?\" : \"\",\n    \"It is 9:30am\" : \"\",\n    \"1\" : \"\",\n    \"2\" : \"\",\n    \"3\" : \"\",\n    \"4\" : \"\",\n    \"5\" : \"\",\n    \"6\" : \"\",\n    \"7\" : \"\",\n    \"8\" : \"\",\n    \"9\" : \"\",\n    \"10\" : \"\",\n    \"Go play with daddy\" : \"\",\n    \"Which book do you want to read next?\" : \"\",\n    \"Can you pick a book?\" : \"\",\n    \"Turn the page please\" : \"\",\n    \"Sun\" : \"\",\n    \"Cloud\" : \"\",\n    \"Sky\" : \"\",\n    \"Moon\" : \"\",\n    \"Please put your toys away\" : \"\",\n    \"Let’s go out to the park\" : \"\",\n    \"Maybe we’ll see a squirrel or a dog\" : \"\",\n    \"When we go out, we need to put on our shoes.\" : \"\",\n    \"Inside\" : \"\",\n    \"Outside\" : \"\",\n    \"Above\" : \"\",\n    \"Beneath\" : \"\",\n    \"In front of\" : \"\",\n    \"Behind\" : \"\",\n    \"Beside\" : \"\",\n    \"Good morning\" : \"\",\n    \"Good night\" : \"\" \n}\n\nexport function search_phrases(e) {\n    var fuzzy_result_arr = search(e.target.value, Object.keys(phrases))\n    document.getElementById(\"hold_results\").innerHTML = \"\"\n    fuzzy_result_arr.forEach(function(result) {\n        var new_div_elem = document.createElement(\"div\");\n        new_div_elem.style.width = \"100%\"\n        new_div_elem.style.height = \"auto\"\n        new_div_elem.style.padding = \"5px\"\n        new_div_elem.style.background = \"#227093\"\n        new_div_elem.style.marginBottom = \"10px\"\n        new_div_elem.style.color = \"whitesmoke\"\n        new_div_elem.style.fontSize = \"20px\"\n        new_div_elem.style.cursor = \"pointer\"\n        new_div_elem.innerHTML = result\n        new_div_elem.addEventListener(\"click\", function(e) {play_chinese(e)}, false);\n        document.getElementById(\"hold_results\").append(new_div_elem)\n    })\n}\n\nexport function play_chinese(e) {\n    console.log(e.target.innerHTML)\n    const audio = new Audio(phrases[e.target.innerHTML]);\n    audio.crossOrigin = 'anonymous';\n    audio.load()\n    audio.play()\n}","import React from 'react';\nimport './App.css';\n\nimport {search_phrases} from './list_choices.js';\n\n\nfunction App() {\n  return (\n    <React.Fragment>\n    <div className=\"App\">\n    <div id=\"header\">CHINESE PHRASES</div>\n    <h4 id=\"subtitle\">Search English Phrase</h4>\n    <h4 id=\"subtitle_2\">Click Result to Play Mandarin Audio</h4>\n    <input id=\"search_phrase\" placeholder=\"search phrase...\" onChange={search_phrases}></input>\n    <div id=\"hold_results\"></div>\n    </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}